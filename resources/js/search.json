[[{"l":"Home","p":["go-cff is an easy-to-use library for working with the Citation File Format (CFF) format in GO."]},{"l":"Use it"},{"l":"Examples"}],[{"l":"Parse","p":["go-cff provides two ways to parse the data:","cff.Parse(content string) for parsing a string","cff.ParseFile(filename string) for parsing a file","The returned value is a cff.CFF object. This object contains all the data from the CFF file, not available fields are empty. It is recommended to refer to that documentation for the available fields and their children or to use an intelligent IDE."]},{"l":"Example"},{"l":"with arrays"},{"l":"The PersonEntity type","p":["The CFF file format allows in several places two types at the same time:","Person","Entity","Go doesn't allow to have a variable with several types. Thus, we created a small proxy struct to handle this situation: PersonEntity.","As you see, it has the two fields for the Person and the Entity type. Additionally, it also has two boolean fields to know if it is a Person or an Entity. The leftover field contains an empty struct of the corresponding type."]},{"i":"example-1","l":"Example"},{"l":"The Identifier type","p":["Equal to the PersonEntity type, the Identifier type is a proxy struct.","Therefore, use the IsDOI, IsURL, IsSWH and IsOther fields to know if the identifier is from type DOI, URL, SWH or Other."]},{"i":"example-2","l":"Example"}],[{"l":"Write","p":["go-cff provides two ways to serialize a cff.CFF object as the CFF format:","cff.Save(content Cff) for getting a string back","cff.SaveFile(file string, content Cff) for saving as a file","cff.CFF is a struct, so you can easly create a new object from that struct or extend an already read in object. Empty and not set fields are skipped during serialisation."]},{"l":"Helper","p":["For providing a better experience, we use special data structures when parsing a file, for example url.URL. However, when creating a field with such a data structure, it is often really messy. Hence, you can use the following helper functions as alegant shortcuts:","cff.MakeUrl(string)","cff.MakeDoi(string)","cff.MakeLicensesByString(...string)","cff.MakeLicenses(...License)"]},{"l":"The PersonEntity type","p":["For an exmplenation see Parse.","The construction of a PersonEntity is very simple, use it like this:","Only the not empty fields are serialized, so setting Person and Entity at the same time is useless."]},{"l":"Example"},{"l":"Save as a string","p":["Results in:"]},{"l":"Save as a file"}],[{"l":"License","p":["go-cff is licensed under the Mozilla Public License Version 2.0."]}]]