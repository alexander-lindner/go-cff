[[{"l":"Home","p":["go-cff is a simple library for working with the CFF format."]},{"l":"Use it"},{"l":"Examples"}],[{"l":"Parse","p":["go-cff provides two ways to parse the data:","cff.Parse(content string) for parsing a string","cff.ParseFile(filename string) for parsing a file","The returned value is a cff.CFF object. This object contains all the data from the CFF file, not available fields are empty."]},{"l":"Example"},{"l":"with arrays"}],[{"l":"Write","p":["go-cff provides two ways to decode a cff.CFF object:","cff.Save(content Cff) for getting a string back","cff.SaveFile(file string, content Cff) for saving as a file","cff.CFF is a struct, so you can easly create a new object from that struct or extend a read in object. Empty fields are skipped."]},{"l":"Helper","p":["For providing a better experience, we use special data structures when parsing a file, for example url.URL. However, when creating a field with such a data structure, it is often really messy. Hence, you can use the following helper functions as alegant shortcuts:","cff.MakeUrl(string)","cff.MakeDoi(string)"]},{"l":"Example"},{"l":"Save as a string","p":["Results in:"]},{"l":"Save as a file"}]]